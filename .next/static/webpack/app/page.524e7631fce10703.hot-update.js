"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/api/client.ts":
/*!***************************!*\
  !*** ./src/api/client.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClient: function() { return /* binding */ apiClient; }\n/* harmony export */ });\nconst API_BASE_URL = \"/api\" || 0;\nclass ApiClient {\n    async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const url = \"\".concat(this.baseUrl).concat(endpoint);\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...options.headers\n            },\n            ...options\n        };\n        try {\n            const response = await fetch(url, config);\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.detail || \"HTTP error! status: \".concat(response.status));\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"API Error on \".concat(endpoint, \":\"), error);\n            throw error;\n        }\n    }\n    // Model endpoints\n    async getModelInfo() {\n        return this.request(\"/model/info\");\n    }\n    async getModelVersions(modelName) {\n        return this.request(\"/model-versions/\".concat(modelName));\n    }\n    async getModelVersionInfo(modelName, version) {\n        return this.request(\"/model-info/\".concat(modelName, \"/\").concat(version));\n    }\n    async getModelInfoDetailed(modelName) {\n        return this.request(\"/model-info/\".concat(modelName));\n    }\n    // Prediction endpoints\n    async predict(data) {\n        return this.request(\"/predict\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                data\n            })\n        });\n    }\n    async uploadFile(file) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        const response = await fetch(\"\".concat(this.baseUrl, \"/predict/upload\"), {\n            method: \"POST\",\n            body: formData\n        });\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.detail || \"HTTP error! status: \".concat(response.status));\n        }\n        return await response.json();\n    }\n    async downloadFile(filename) {\n        const response = await fetch(\"\".concat(this.baseUrl, \"/download/\").concat(filename));\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.detail || \"HTTP error! status: \".concat(response.status));\n        }\n        return await response.blob();\n    }\n    // Training endpoint\n    async trainModel(params) {\n        return this.request(\"/train\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(params)\n        });\n    }\n    // Dashboard endpoints\n    async getDashboardMetrics(modelName, version) {\n        const modelVersionInfo = await this.getModelVersionInfo(modelName, version);\n        // Transform the data to match DashboardMetrics interface\n        const confusionMatrix = {\n            \"CANDIDATE\": {\n                \"CANDIDATE\": modelVersionInfo.confusion_matrix[0][0],\n                \"CONFIRMED\": modelVersionInfo.confusion_matrix[0][1],\n                \"FALSE POSITIVE\": modelVersionInfo.confusion_matrix[0][2]\n            },\n            \"CONFIRMED\": {\n                \"CANDIDATE\": modelVersionInfo.confusion_matrix[1][0],\n                \"CONFIRMED\": modelVersionInfo.confusion_matrix[1][1],\n                \"FALSE POSITIVE\": modelVersionInfo.confusion_matrix[1][2]\n            },\n            \"FALSE POSITIVE\": {\n                \"CANDIDATE\": modelVersionInfo.confusion_matrix[2][0],\n                \"CONFIRMED\": modelVersionInfo.confusion_matrix[2][1],\n                \"FALSE POSITIVE\": modelVersionInfo.confusion_matrix[2][2]\n            }\n        };\n        // Calculate class distribution from confusion matrix\n        const classDistribution = {\n            \"CANDIDATE\": modelVersionInfo.confusion_matrix[0].reduce((sum, val)=>sum + val, 0),\n            \"CONFIRMED\": modelVersionInfo.confusion_matrix[1].reduce((sum, val)=>sum + val, 0),\n            \"FALSE POSITIVE\": modelVersionInfo.confusion_matrix[2].reduce((sum, val)=>sum + val, 0)\n        };\n        return {\n            confusion_matrix: confusionMatrix,\n            class_distribution: classDistribution\n        };\n    }\n    // Training endpoints\n    async trainModel(params) {\n        return this.request(\"/train\", {\n            method: \"POST\",\n            body: JSON.stringify(params)\n        });\n    }\n    // Health check\n    async healthCheck() {\n        try {\n            return await this.request(\"/health\");\n        } catch (e) {\n            // If health endpoint doesn't exist, try model info as fallback\n            await this.getModelInfo();\n            return {\n                status: \"ok\"\n            };\n        }\n    }\n    constructor(baseUrl = API_BASE_URL){\n        this.baseUrl = baseUrl;\n    }\n}\n// Create and export a singleton instance\nconst apiClient = new ApiClient();\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/api/client.ts\n"));

/***/ })

});